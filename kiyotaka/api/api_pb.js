// source: api/api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_api_annotations_pb = require('../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var protoc$gen$openapiv2_options_annotations_pb = require('../protoc-gen-openapiv2/options/annotations_pb.js');
goog.object.extend(proto, protoc$gen$openapiv2_options_annotations_pb);
var trade_aggregation_pb = require('../trade_aggregation_pb.js');
goog.object.extend(proto, trade_aggregation_pb);
var trade_side_agnostic_aggregation_pb = require('../trade_side_agnostic_aggregation_pb.js');
goog.object.extend(proto, trade_side_agnostic_aggregation_pb);
var trade_pb = require('../trade_pb.js');
goog.object.extend(proto, trade_pb);
goog.exportSymbol('proto.api.Point', null, global);
goog.exportSymbol('proto.api.Point.PointCase', null, global);
goog.exportSymbol('proto.api.PointAggregationInterval', null, global);
goog.exportSymbol('proto.api.PointCategory', null, global);
goog.exportSymbol('proto.api.PointExchange', null, global);
goog.exportSymbol('proto.api.PointMetaRequest', null, global);
goog.exportSymbol('proto.api.PointMetaResponse', null, global);
goog.exportSymbol('proto.api.PointRequest', null, global);
goog.exportSymbol('proto.api.PointResponse', null, global);
goog.exportSymbol('proto.api.PointSeries', null, global);
goog.exportSymbol('proto.api.PointSeriesIdentifier', null, global);
goog.exportSymbol('proto.api.PointSide', null, global);
goog.exportSymbol('proto.api.PointType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.PointMetaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.PointMetaRequest.repeatedFields_, null);
};
goog.inherits(proto.api.PointMetaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.PointMetaRequest.displayName = 'proto.api.PointMetaRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.PointResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.PointResponse.repeatedFields_, null);
};
goog.inherits(proto.api.PointResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.PointResponse.displayName = 'proto.api.PointResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.PointMetaResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.PointMetaResponse.repeatedFields_, null);
};
goog.inherits(proto.api.PointMetaResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.PointMetaResponse.displayName = 'proto.api.PointMetaResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.PointRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.PointRequest.repeatedFields_, null);
};
goog.inherits(proto.api.PointRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.PointRequest.displayName = 'proto.api.PointRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.PointSeriesIdentifier = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.PointSeriesIdentifier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.PointSeriesIdentifier.displayName = 'proto.api.PointSeriesIdentifier';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Point = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.Point.oneofGroups_);
};
goog.inherits(proto.api.Point, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.Point.displayName = 'proto.api.Point';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.PointSeries = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.PointSeries.repeatedFields_, null);
};
goog.inherits(proto.api.PointSeries, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.PointSeries.displayName = 'proto.api.PointSeries';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.PointMetaRequest.repeatedFields_ = [1,2,3,4,5,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.PointMetaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.PointMetaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.PointMetaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PointMetaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    typeList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    exchangeList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    categoryList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    coinList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    rawsymbolList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    normalizedsymbolList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    from: jspb.Message.getFieldWithDefault(msg, 6, 0),
    to: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.PointMetaRequest}
 */
proto.api.PointMetaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.PointMetaRequest;
  return proto.api.PointMetaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.PointMetaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.PointMetaRequest}
 */
proto.api.PointMetaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<!proto.api.PointType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addType(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<!proto.api.PointExchange>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addExchange(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<!proto.api.PointCategory>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addCategory(values[i]);
      }
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addCoin(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addRawsymbol(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addNormalizedsymbol(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrom(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.PointMetaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.PointMetaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.PointMetaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PointMetaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypeList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
  f = message.getExchangeList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
  f = message.getCategoryList();
  if (f.length > 0) {
    writer.writePackedEnum(
      3,
      f
    );
  }
  f = message.getCoinList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getRawsymbolList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getNormalizedsymbolList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
};


/**
 * repeated PointType type = 1;
 * @return {!Array<!proto.api.PointType>}
 */
proto.api.PointMetaRequest.prototype.getTypeList = function() {
  return /** @type {!Array<!proto.api.PointType>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<!proto.api.PointType>} value
 * @return {!proto.api.PointMetaRequest} returns this
 */
proto.api.PointMetaRequest.prototype.setTypeList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.api.PointType} value
 * @param {number=} opt_index
 * @return {!proto.api.PointMetaRequest} returns this
 */
proto.api.PointMetaRequest.prototype.addType = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.PointMetaRequest} returns this
 */
proto.api.PointMetaRequest.prototype.clearTypeList = function() {
  return this.setTypeList([]);
};


/**
 * repeated PointExchange exchange = 2;
 * @return {!Array<!proto.api.PointExchange>}
 */
proto.api.PointMetaRequest.prototype.getExchangeList = function() {
  return /** @type {!Array<!proto.api.PointExchange>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.api.PointExchange>} value
 * @return {!proto.api.PointMetaRequest} returns this
 */
proto.api.PointMetaRequest.prototype.setExchangeList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.api.PointExchange} value
 * @param {number=} opt_index
 * @return {!proto.api.PointMetaRequest} returns this
 */
proto.api.PointMetaRequest.prototype.addExchange = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.PointMetaRequest} returns this
 */
proto.api.PointMetaRequest.prototype.clearExchangeList = function() {
  return this.setExchangeList([]);
};


/**
 * repeated PointCategory category = 3;
 * @return {!Array<!proto.api.PointCategory>}
 */
proto.api.PointMetaRequest.prototype.getCategoryList = function() {
  return /** @type {!Array<!proto.api.PointCategory>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<!proto.api.PointCategory>} value
 * @return {!proto.api.PointMetaRequest} returns this
 */
proto.api.PointMetaRequest.prototype.setCategoryList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!proto.api.PointCategory} value
 * @param {number=} opt_index
 * @return {!proto.api.PointMetaRequest} returns this
 */
proto.api.PointMetaRequest.prototype.addCategory = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.PointMetaRequest} returns this
 */
proto.api.PointMetaRequest.prototype.clearCategoryList = function() {
  return this.setCategoryList([]);
};


/**
 * repeated string coin = 4;
 * @return {!Array<string>}
 */
proto.api.PointMetaRequest.prototype.getCoinList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.PointMetaRequest} returns this
 */
proto.api.PointMetaRequest.prototype.setCoinList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.PointMetaRequest} returns this
 */
proto.api.PointMetaRequest.prototype.addCoin = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.PointMetaRequest} returns this
 */
proto.api.PointMetaRequest.prototype.clearCoinList = function() {
  return this.setCoinList([]);
};


/**
 * repeated string rawSymbol = 5;
 * @return {!Array<string>}
 */
proto.api.PointMetaRequest.prototype.getRawsymbolList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.PointMetaRequest} returns this
 */
proto.api.PointMetaRequest.prototype.setRawsymbolList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.PointMetaRequest} returns this
 */
proto.api.PointMetaRequest.prototype.addRawsymbol = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.PointMetaRequest} returns this
 */
proto.api.PointMetaRequest.prototype.clearRawsymbolList = function() {
  return this.setRawsymbolList([]);
};


/**
 * repeated string normalizedSymbol = 8;
 * @return {!Array<string>}
 */
proto.api.PointMetaRequest.prototype.getNormalizedsymbolList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.PointMetaRequest} returns this
 */
proto.api.PointMetaRequest.prototype.setNormalizedsymbolList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.PointMetaRequest} returns this
 */
proto.api.PointMetaRequest.prototype.addNormalizedsymbol = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.PointMetaRequest} returns this
 */
proto.api.PointMetaRequest.prototype.clearNormalizedsymbolList = function() {
  return this.setNormalizedsymbolList([]);
};


/**
 * optional int64 from = 6;
 * @return {number}
 */
proto.api.PointMetaRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.PointMetaRequest} returns this
 */
proto.api.PointMetaRequest.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 to = 7;
 * @return {number}
 */
proto.api.PointMetaRequest.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.PointMetaRequest} returns this
 */
proto.api.PointMetaRequest.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.PointResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.PointResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.PointResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.PointResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PointResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    seriesList: jspb.Message.toObjectList(msg.getSeriesList(),
    proto.api.PointSeries.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.PointResponse}
 */
proto.api.PointResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.PointResponse;
  return proto.api.PointResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.PointResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.PointResponse}
 */
proto.api.PointResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.PointSeries;
      reader.readMessage(value,proto.api.PointSeries.deserializeBinaryFromReader);
      msg.addSeries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.PointResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.PointResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.PointResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PointResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.PointSeries.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PointSeries series = 1;
 * @return {!Array<!proto.api.PointSeries>}
 */
proto.api.PointResponse.prototype.getSeriesList = function() {
  return /** @type{!Array<!proto.api.PointSeries>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.PointSeries, 1));
};


/**
 * @param {!Array<!proto.api.PointSeries>} value
 * @return {!proto.api.PointResponse} returns this
*/
proto.api.PointResponse.prototype.setSeriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.PointSeries=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.PointSeries}
 */
proto.api.PointResponse.prototype.addSeries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.PointSeries, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.PointResponse} returns this
 */
proto.api.PointResponse.prototype.clearSeriesList = function() {
  return this.setSeriesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.PointMetaResponse.repeatedFields_ = [1,2,3,4,6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.PointMetaResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.PointMetaResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.PointMetaResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PointMetaResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    typesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    exchangesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    categoriesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    coinsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    rawsymbolsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    normalizedsymbolsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.PointMetaResponse}
 */
proto.api.PointMetaResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.PointMetaResponse;
  return proto.api.PointMetaResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.PointMetaResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.PointMetaResponse}
 */
proto.api.PointMetaResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<!proto.api.PointType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTypes(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<!proto.api.PointExchange>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addExchanges(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<!proto.api.PointCategory>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addCategories(values[i]);
      }
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addCoins(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addRawsymbols(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addNormalizedsymbols(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.PointMetaResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.PointMetaResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.PointMetaResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PointMetaResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
  f = message.getExchangesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
  f = message.getCategoriesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      3,
      f
    );
  }
  f = message.getCoinsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getRawsymbolsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getNormalizedsymbolsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
};


/**
 * repeated PointType types = 1;
 * @return {!Array<!proto.api.PointType>}
 */
proto.api.PointMetaResponse.prototype.getTypesList = function() {
  return /** @type {!Array<!proto.api.PointType>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<!proto.api.PointType>} value
 * @return {!proto.api.PointMetaResponse} returns this
 */
proto.api.PointMetaResponse.prototype.setTypesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.api.PointType} value
 * @param {number=} opt_index
 * @return {!proto.api.PointMetaResponse} returns this
 */
proto.api.PointMetaResponse.prototype.addTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.PointMetaResponse} returns this
 */
proto.api.PointMetaResponse.prototype.clearTypesList = function() {
  return this.setTypesList([]);
};


/**
 * repeated PointExchange exchanges = 2;
 * @return {!Array<!proto.api.PointExchange>}
 */
proto.api.PointMetaResponse.prototype.getExchangesList = function() {
  return /** @type {!Array<!proto.api.PointExchange>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.api.PointExchange>} value
 * @return {!proto.api.PointMetaResponse} returns this
 */
proto.api.PointMetaResponse.prototype.setExchangesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.api.PointExchange} value
 * @param {number=} opt_index
 * @return {!proto.api.PointMetaResponse} returns this
 */
proto.api.PointMetaResponse.prototype.addExchanges = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.PointMetaResponse} returns this
 */
proto.api.PointMetaResponse.prototype.clearExchangesList = function() {
  return this.setExchangesList([]);
};


/**
 * repeated PointCategory categories = 3;
 * @return {!Array<!proto.api.PointCategory>}
 */
proto.api.PointMetaResponse.prototype.getCategoriesList = function() {
  return /** @type {!Array<!proto.api.PointCategory>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<!proto.api.PointCategory>} value
 * @return {!proto.api.PointMetaResponse} returns this
 */
proto.api.PointMetaResponse.prototype.setCategoriesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!proto.api.PointCategory} value
 * @param {number=} opt_index
 * @return {!proto.api.PointMetaResponse} returns this
 */
proto.api.PointMetaResponse.prototype.addCategories = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.PointMetaResponse} returns this
 */
proto.api.PointMetaResponse.prototype.clearCategoriesList = function() {
  return this.setCategoriesList([]);
};


/**
 * repeated string coins = 4;
 * @return {!Array<string>}
 */
proto.api.PointMetaResponse.prototype.getCoinsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.PointMetaResponse} returns this
 */
proto.api.PointMetaResponse.prototype.setCoinsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.PointMetaResponse} returns this
 */
proto.api.PointMetaResponse.prototype.addCoins = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.PointMetaResponse} returns this
 */
proto.api.PointMetaResponse.prototype.clearCoinsList = function() {
  return this.setCoinsList([]);
};


/**
 * repeated string rawSymbols = 6;
 * @return {!Array<string>}
 */
proto.api.PointMetaResponse.prototype.getRawsymbolsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.PointMetaResponse} returns this
 */
proto.api.PointMetaResponse.prototype.setRawsymbolsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.PointMetaResponse} returns this
 */
proto.api.PointMetaResponse.prototype.addRawsymbols = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.PointMetaResponse} returns this
 */
proto.api.PointMetaResponse.prototype.clearRawsymbolsList = function() {
  return this.setRawsymbolsList([]);
};


/**
 * repeated string normalizedSymbols = 7;
 * @return {!Array<string>}
 */
proto.api.PointMetaResponse.prototype.getNormalizedsymbolsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.PointMetaResponse} returns this
 */
proto.api.PointMetaResponse.prototype.setNormalizedsymbolsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.PointMetaResponse} returns this
 */
proto.api.PointMetaResponse.prototype.addNormalizedsymbols = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.PointMetaResponse} returns this
 */
proto.api.PointMetaResponse.prototype.clearNormalizedsymbolsList = function() {
  return this.setNormalizedsymbolsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.PointRequest.repeatedFields_ = [1,2,3,4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.PointRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.PointRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.PointRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PointRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    typeList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    exchangeList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    normalizedsymbolList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    coinList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    categoryList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    rawsymbolList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    side: jspb.Message.getFieldWithDefault(msg, 8, 0),
    interval: jspb.Message.getFieldWithDefault(msg, 12, 0),
    from: jspb.Message.getFieldWithDefault(msg, 14, 0),
    period: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.PointRequest}
 */
proto.api.PointRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.PointRequest;
  return proto.api.PointRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.PointRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.PointRequest}
 */
proto.api.PointRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<!proto.api.PointType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addType(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<!proto.api.PointExchange>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addExchange(values[i]);
      }
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addNormalizedsymbol(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addCoin(value);
      break;
    case 5:
      var values = /** @type {!Array<!proto.api.PointCategory>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addCategory(values[i]);
      }
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addRawsymbol(value);
      break;
    case 8:
      var value = /** @type {!proto.api.PointSide} */ (reader.readEnum());
      msg.setSide(value);
      break;
    case 12:
      var value = /** @type {!proto.api.PointAggregationInterval} */ (reader.readEnum());
      msg.setInterval(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrom(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPeriod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.PointRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.PointRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.PointRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PointRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypeList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
  f = message.getExchangeList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
  f = message.getNormalizedsymbolList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getCoinList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getCategoryList();
  if (f.length > 0) {
    writer.writePackedEnum(
      5,
      f
    );
  }
  f = message.getRawsymbolList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getSide();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getInterval();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getPeriod();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
};


/**
 * repeated PointType type = 1;
 * @return {!Array<!proto.api.PointType>}
 */
proto.api.PointRequest.prototype.getTypeList = function() {
  return /** @type {!Array<!proto.api.PointType>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<!proto.api.PointType>} value
 * @return {!proto.api.PointRequest} returns this
 */
proto.api.PointRequest.prototype.setTypeList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.api.PointType} value
 * @param {number=} opt_index
 * @return {!proto.api.PointRequest} returns this
 */
proto.api.PointRequest.prototype.addType = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.PointRequest} returns this
 */
proto.api.PointRequest.prototype.clearTypeList = function() {
  return this.setTypeList([]);
};


/**
 * repeated PointExchange exchange = 2;
 * @return {!Array<!proto.api.PointExchange>}
 */
proto.api.PointRequest.prototype.getExchangeList = function() {
  return /** @type {!Array<!proto.api.PointExchange>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.api.PointExchange>} value
 * @return {!proto.api.PointRequest} returns this
 */
proto.api.PointRequest.prototype.setExchangeList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.api.PointExchange} value
 * @param {number=} opt_index
 * @return {!proto.api.PointRequest} returns this
 */
proto.api.PointRequest.prototype.addExchange = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.PointRequest} returns this
 */
proto.api.PointRequest.prototype.clearExchangeList = function() {
  return this.setExchangeList([]);
};


/**
 * repeated string normalizedSymbol = 3;
 * @return {!Array<string>}
 */
proto.api.PointRequest.prototype.getNormalizedsymbolList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.PointRequest} returns this
 */
proto.api.PointRequest.prototype.setNormalizedsymbolList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.PointRequest} returns this
 */
proto.api.PointRequest.prototype.addNormalizedsymbol = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.PointRequest} returns this
 */
proto.api.PointRequest.prototype.clearNormalizedsymbolList = function() {
  return this.setNormalizedsymbolList([]);
};


/**
 * repeated string coin = 4;
 * @return {!Array<string>}
 */
proto.api.PointRequest.prototype.getCoinList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.PointRequest} returns this
 */
proto.api.PointRequest.prototype.setCoinList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.PointRequest} returns this
 */
proto.api.PointRequest.prototype.addCoin = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.PointRequest} returns this
 */
proto.api.PointRequest.prototype.clearCoinList = function() {
  return this.setCoinList([]);
};


/**
 * repeated PointCategory category = 5;
 * @return {!Array<!proto.api.PointCategory>}
 */
proto.api.PointRequest.prototype.getCategoryList = function() {
  return /** @type {!Array<!proto.api.PointCategory>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<!proto.api.PointCategory>} value
 * @return {!proto.api.PointRequest} returns this
 */
proto.api.PointRequest.prototype.setCategoryList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!proto.api.PointCategory} value
 * @param {number=} opt_index
 * @return {!proto.api.PointRequest} returns this
 */
proto.api.PointRequest.prototype.addCategory = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.PointRequest} returns this
 */
proto.api.PointRequest.prototype.clearCategoryList = function() {
  return this.setCategoryList([]);
};


/**
 * repeated string rawSymbol = 6;
 * @return {!Array<string>}
 */
proto.api.PointRequest.prototype.getRawsymbolList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.PointRequest} returns this
 */
proto.api.PointRequest.prototype.setRawsymbolList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.PointRequest} returns this
 */
proto.api.PointRequest.prototype.addRawsymbol = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.PointRequest} returns this
 */
proto.api.PointRequest.prototype.clearRawsymbolList = function() {
  return this.setRawsymbolList([]);
};


/**
 * optional PointSide side = 8;
 * @return {!proto.api.PointSide}
 */
proto.api.PointRequest.prototype.getSide = function() {
  return /** @type {!proto.api.PointSide} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.api.PointSide} value
 * @return {!proto.api.PointRequest} returns this
 */
proto.api.PointRequest.prototype.setSide = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional PointAggregationInterval interval = 12;
 * @return {!proto.api.PointAggregationInterval}
 */
proto.api.PointRequest.prototype.getInterval = function() {
  return /** @type {!proto.api.PointAggregationInterval} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.api.PointAggregationInterval} value
 * @return {!proto.api.PointRequest} returns this
 */
proto.api.PointRequest.prototype.setInterval = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional int64 from = 14;
 * @return {number}
 */
proto.api.PointRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.PointRequest} returns this
 */
proto.api.PointRequest.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int64 period = 15;
 * @return {number}
 */
proto.api.PointRequest.prototype.getPeriod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.PointRequest} returns this
 */
proto.api.PointRequest.prototype.setPeriod = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.PointSeriesIdentifier.prototype.toObject = function(opt_includeInstance) {
  return proto.api.PointSeriesIdentifier.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.PointSeriesIdentifier} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PointSeriesIdentifier.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    rawsymbol: jspb.Message.getFieldWithDefault(msg, 3, ""),
    exchange: jspb.Message.getFieldWithDefault(msg, 4, 0),
    normalizedsymbol: jspb.Message.getFieldWithDefault(msg, 6, ""),
    category: jspb.Message.getFieldWithDefault(msg, 7, 0),
    interval: jspb.Message.getFieldWithDefault(msg, 8, 0),
    side: jspb.Message.getFieldWithDefault(msg, 11, 0),
    coin: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.PointSeriesIdentifier}
 */
proto.api.PointSeriesIdentifier.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.PointSeriesIdentifier;
  return proto.api.PointSeriesIdentifier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.PointSeriesIdentifier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.PointSeriesIdentifier}
 */
proto.api.PointSeriesIdentifier.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {!proto.api.PointType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRawsymbol(value);
      break;
    case 4:
      var value = /** @type {!proto.api.PointExchange} */ (reader.readEnum());
      msg.setExchange(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setNormalizedsymbol(value);
      break;
    case 7:
      var value = /** @type {!proto.api.PointCategory} */ (reader.readEnum());
      msg.setCategory(value);
      break;
    case 8:
      var value = /** @type {!proto.api.PointAggregationInterval} */ (reader.readEnum());
      msg.setInterval(value);
      break;
    case 11:
      var value = /** @type {!proto.api.PointSide} */ (reader.readEnum());
      msg.setSide(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.PointSeriesIdentifier.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.PointSeriesIdentifier.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.PointSeriesIdentifier} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PointSeriesIdentifier.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getRawsymbol();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExchange();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getNormalizedsymbol();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCategory();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getInterval();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getSide();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getCoin();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional PointType type = 2;
 * @return {!proto.api.PointType}
 */
proto.api.PointSeriesIdentifier.prototype.getType = function() {
  return /** @type {!proto.api.PointType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.api.PointType} value
 * @return {!proto.api.PointSeriesIdentifier} returns this
 */
proto.api.PointSeriesIdentifier.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string rawSymbol = 3;
 * @return {string}
 */
proto.api.PointSeriesIdentifier.prototype.getRawsymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.PointSeriesIdentifier} returns this
 */
proto.api.PointSeriesIdentifier.prototype.setRawsymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional PointExchange exchange = 4;
 * @return {!proto.api.PointExchange}
 */
proto.api.PointSeriesIdentifier.prototype.getExchange = function() {
  return /** @type {!proto.api.PointExchange} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.api.PointExchange} value
 * @return {!proto.api.PointSeriesIdentifier} returns this
 */
proto.api.PointSeriesIdentifier.prototype.setExchange = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string normalizedSymbol = 6;
 * @return {string}
 */
proto.api.PointSeriesIdentifier.prototype.getNormalizedsymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.PointSeriesIdentifier} returns this
 */
proto.api.PointSeriesIdentifier.prototype.setNormalizedsymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional PointCategory category = 7;
 * @return {!proto.api.PointCategory}
 */
proto.api.PointSeriesIdentifier.prototype.getCategory = function() {
  return /** @type {!proto.api.PointCategory} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.api.PointCategory} value
 * @return {!proto.api.PointSeriesIdentifier} returns this
 */
proto.api.PointSeriesIdentifier.prototype.setCategory = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional PointAggregationInterval interval = 8;
 * @return {!proto.api.PointAggregationInterval}
 */
proto.api.PointSeriesIdentifier.prototype.getInterval = function() {
  return /** @type {!proto.api.PointAggregationInterval} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.api.PointAggregationInterval} value
 * @return {!proto.api.PointSeriesIdentifier} returns this
 */
proto.api.PointSeriesIdentifier.prototype.setInterval = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional PointSide side = 11;
 * @return {!proto.api.PointSide}
 */
proto.api.PointSeriesIdentifier.prototype.getSide = function() {
  return /** @type {!proto.api.PointSide} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.api.PointSide} value
 * @return {!proto.api.PointSeriesIdentifier} returns this
 */
proto.api.PointSeriesIdentifier.prototype.setSide = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional string coin = 20;
 * @return {string}
 */
proto.api.PointSeriesIdentifier.prototype.getCoin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.PointSeriesIdentifier} returns this
 */
proto.api.PointSeriesIdentifier.prototype.setCoin = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.Point.oneofGroups_ = [[7,15,108]];

/**
 * @enum {number}
 */
proto.api.Point.PointCase = {
  POINT_NOT_SET: 0,
  TRADE: 7,
  TRADEAGGREGATION: 15,
  TRADESIDEAGNOSTICAGGREGATION: 108
};

/**
 * @return {proto.api.Point.PointCase}
 */
proto.api.Point.prototype.getPointCase = function() {
  return /** @type {proto.api.Point.PointCase} */(jspb.Message.computeOneofCase(this, proto.api.Point.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Point.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Point.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Point} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Point.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto.api.PointSeriesIdentifier.toObject(includeInstance, f),
    trade: (f = msg.getTrade()) && trade_pb.Trade.toObject(includeInstance, f),
    tradeaggregation: (f = msg.getTradeaggregation()) && trade_aggregation_pb.TradeAggregation.toObject(includeInstance, f),
    tradesideagnosticaggregation: (f = msg.getTradesideagnosticaggregation()) && trade_side_agnostic_aggregation_pb.TradeSideAgnosticAggregation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Point}
 */
proto.api.Point.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Point;
  return proto.api.Point.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Point} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Point}
 */
proto.api.Point.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.PointSeriesIdentifier;
      reader.readMessage(value,proto.api.PointSeriesIdentifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 7:
      var value = new trade_pb.Trade;
      reader.readMessage(value,trade_pb.Trade.deserializeBinaryFromReader);
      msg.setTrade(value);
      break;
    case 15:
      var value = new trade_aggregation_pb.TradeAggregation;
      reader.readMessage(value,trade_aggregation_pb.TradeAggregation.deserializeBinaryFromReader);
      msg.setTradeaggregation(value);
      break;
    case 108:
      var value = new trade_side_agnostic_aggregation_pb.TradeSideAgnosticAggregation;
      reader.readMessage(value,trade_side_agnostic_aggregation_pb.TradeSideAgnosticAggregation.deserializeBinaryFromReader);
      msg.setTradesideagnosticaggregation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Point.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Point.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Point} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Point.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.PointSeriesIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getTrade();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      trade_pb.Trade.serializeBinaryToWriter
    );
  }
  f = message.getTradeaggregation();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      trade_aggregation_pb.TradeAggregation.serializeBinaryToWriter
    );
  }
  f = message.getTradesideagnosticaggregation();
  if (f != null) {
    writer.writeMessage(
      108,
      f,
      trade_side_agnostic_aggregation_pb.TradeSideAgnosticAggregation.serializeBinaryToWriter
    );
  }
};


/**
 * optional PointSeriesIdentifier id = 1;
 * @return {?proto.api.PointSeriesIdentifier}
 */
proto.api.Point.prototype.getId = function() {
  return /** @type{?proto.api.PointSeriesIdentifier} */ (
    jspb.Message.getWrapperField(this, proto.api.PointSeriesIdentifier, 1));
};


/**
 * @param {?proto.api.PointSeriesIdentifier|undefined} value
 * @return {!proto.api.Point} returns this
*/
proto.api.Point.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.Point} returns this
 */
proto.api.Point.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.Point.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Trade trade = 7;
 * @return {?proto.Trade}
 */
proto.api.Point.prototype.getTrade = function() {
  return /** @type{?proto.Trade} */ (
    jspb.Message.getWrapperField(this, trade_pb.Trade, 7));
};


/**
 * @param {?proto.Trade|undefined} value
 * @return {!proto.api.Point} returns this
*/
proto.api.Point.prototype.setTrade = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.api.Point.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.Point} returns this
 */
proto.api.Point.prototype.clearTrade = function() {
  return this.setTrade(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.Point.prototype.hasTrade = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional TradeAggregation tradeAggregation = 15;
 * @return {?proto.TradeAggregation}
 */
proto.api.Point.prototype.getTradeaggregation = function() {
  return /** @type{?proto.TradeAggregation} */ (
    jspb.Message.getWrapperField(this, trade_aggregation_pb.TradeAggregation, 15));
};


/**
 * @param {?proto.TradeAggregation|undefined} value
 * @return {!proto.api.Point} returns this
*/
proto.api.Point.prototype.setTradeaggregation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.api.Point.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.Point} returns this
 */
proto.api.Point.prototype.clearTradeaggregation = function() {
  return this.setTradeaggregation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.Point.prototype.hasTradeaggregation = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional TradeSideAgnosticAggregation tradeSideAgnosticAggregation = 108;
 * @return {?proto.TradeSideAgnosticAggregation}
 */
proto.api.Point.prototype.getTradesideagnosticaggregation = function() {
  return /** @type{?proto.TradeSideAgnosticAggregation} */ (
    jspb.Message.getWrapperField(this, trade_side_agnostic_aggregation_pb.TradeSideAgnosticAggregation, 108));
};


/**
 * @param {?proto.TradeSideAgnosticAggregation|undefined} value
 * @return {!proto.api.Point} returns this
*/
proto.api.Point.prototype.setTradesideagnosticaggregation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 108, proto.api.Point.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.Point} returns this
 */
proto.api.Point.prototype.clearTradesideagnosticaggregation = function() {
  return this.setTradesideagnosticaggregation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.Point.prototype.hasTradesideagnosticaggregation = function() {
  return jspb.Message.getField(this, 108) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.PointSeries.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.PointSeries.prototype.toObject = function(opt_includeInstance) {
  return proto.api.PointSeries.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.PointSeries} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PointSeries.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto.api.PointSeriesIdentifier.toObject(includeInstance, f),
    pointsList: jspb.Message.toObjectList(msg.getPointsList(),
    proto.api.Point.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.PointSeries}
 */
proto.api.PointSeries.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.PointSeries;
  return proto.api.PointSeries.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.PointSeries} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.PointSeries}
 */
proto.api.PointSeries.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.api.PointSeriesIdentifier;
      reader.readMessage(value,proto.api.PointSeriesIdentifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 3:
      var value = new proto.api.Point;
      reader.readMessage(value,proto.api.Point.deserializeBinaryFromReader);
      msg.addPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.PointSeries.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.PointSeries.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.PointSeries} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PointSeries.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.PointSeriesIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getPointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.api.Point.serializeBinaryToWriter
    );
  }
};


/**
 * optional PointSeriesIdentifier id = 2;
 * @return {?proto.api.PointSeriesIdentifier}
 */
proto.api.PointSeries.prototype.getId = function() {
  return /** @type{?proto.api.PointSeriesIdentifier} */ (
    jspb.Message.getWrapperField(this, proto.api.PointSeriesIdentifier, 2));
};


/**
 * @param {?proto.api.PointSeriesIdentifier|undefined} value
 * @return {!proto.api.PointSeries} returns this
*/
proto.api.PointSeries.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.PointSeries} returns this
 */
proto.api.PointSeries.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.PointSeries.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Point points = 3;
 * @return {!Array<!proto.api.Point>}
 */
proto.api.PointSeries.prototype.getPointsList = function() {
  return /** @type{!Array<!proto.api.Point>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.Point, 3));
};


/**
 * @param {!Array<!proto.api.Point>} value
 * @return {!proto.api.PointSeries} returns this
*/
proto.api.PointSeries.prototype.setPointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.api.Point=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.Point}
 */
proto.api.PointSeries.prototype.addPoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.api.Point, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.PointSeries} returns this
 */
proto.api.PointSeries.prototype.clearPointsList = function() {
  return this.setPointsList([]);
};


/**
 * @enum {number}
 */
proto.api.PointType = {
  UNKNOWN_TYPE: 0,
  TRADE: 1,
  TRADE_AGG: 9,
  TRADE_SIDE_AGNOSTIC_AGG: 107
};

/**
 * @enum {number}
 */
proto.api.PointSide = {
  UNKNOWN_SIDE: 0,
  SELL: 1,
  BUY: 2
};

/**
 * @enum {number}
 */
proto.api.PointExchange = {
  UNKNOWN_EXCHANGE: 0,
  BITMEX: 1,
  DERIBIT: 2,
  BINANCE_FUTURES: 3,
  BINANCE_DELIVERY: 4,
  BINANCE: 6,
  FTX: 7,
  OKEX_FUTURES: 8,
  OKEX_OPTIONS: 9,
  OKEX_SWAP: 10,
  OKEX: 11,
  BITFINEX_DERIVATIVES: 16,
  BITFINEX: 17,
  COINBASE: 18,
  CRYPTOFACILITIES: 19,
  KRAKEN: 20,
  BITSTAMP: 21,
  GEMINI: 22,
  BYBIT: 24,
  BYBIT_SPOT: 60,
  NYSE_AMERICAN: 61,
  NASDAQ_BX: 62,
  NYSE_NATIONAL: 63,
  FINRA: 64,
  CBOE_EDGA: 67,
  CBOE_EDGX: 68,
  NYSE_CHICAGO: 69,
  NYSE: 70,
  NYSE_ARCA: 71,
  NASDAQ: 72,
  LTSE: 74,
  IEX: 75,
  NASDAQ_PHILADELPHIA: 77,
  CBOE_BYX: 78,
  CBOE_BZX: 79,
  MIAX_PEARL: 80,
  MEMBERS_EXCHANGE: 81,
  OTC_EQUITY_SECURITY: 82
};

/**
 * @enum {number}
 */
proto.api.PointCategory = {
  UNKNOWN_CATEGORY: 0,
  SPOT: 1,
  PERPETUAL: 2,
  FUTURE: 3,
  OPTION: 4,
  COMBO: 5
};

/**
 * @enum {number}
 */
proto.api.PointAggregationInterval = {
  UNKNOWN_AGGREGATION_INTERVAL: 0,
  MINUTE: 2,
  FIVE_MINUTES: 3,
  FIFTEEN_MINUTES: 4,
  HOUR: 5,
  FOUR_HOURS: 6,
  DAY: 7,
  WEEK: 8
};

goog.object.extend(exports, proto.api);
